[{"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/index.tsx":"1","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/App.tsx":"2","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/state/index.ts":"3","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/constants.ts":"4","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/state/reducer.ts":"5","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/state/state.tsx":"6","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/PatientListPage/index.tsx":"7","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/PatientPage/index.tsx":"8","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/utils.ts":"9","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/components/HealthRatingBar.tsx":"10","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/types.ts":"11","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/AddPatientModal/index.tsx":"12","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/AddPatientModal/AddPatientForm.tsx":"13","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/AddPatientModal/FormField.tsx":"14","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/PatientPage/EntryDetails.tsx":"15","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/PatientPage/HealthCheckDetails.tsx":"16","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/PatientPage/OccupationalHealthcareDetails.tsx":"17","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/PatientPage/HospitalDetails.tsx":"18"},{"size":302,"mtime":1606843476000,"results":"19","hashOfConfig":"20"},{"size":1795,"mtime":1607018690000,"results":"21","hashOfConfig":"20"},{"size":52,"mtime":1606843481000,"results":"22","hashOfConfig":"20"},{"size":55,"mtime":1606843475000,"results":"23","hashOfConfig":"20"},{"size":1979,"mtime":1607018731000,"results":"24","hashOfConfig":"20"},{"size":946,"mtime":1607018493000,"results":"25","hashOfConfig":"20"},{"size":2540,"mtime":1606973494000,"results":"26","hashOfConfig":"20"},{"size":1601,"mtime":1607198617000,"results":"27","hashOfConfig":"20"},{"size":1505,"mtime":1607020223000,"results":"28","hashOfConfig":"20"},{"size":630,"mtime":1606843474000,"results":"29","hashOfConfig":"20"},{"size":1196,"mtime":1607039537000,"results":"30","hashOfConfig":"20"},{"size":713,"mtime":1606843471000,"results":"31","hashOfConfig":"20"},{"size":3009,"mtime":1606843470000,"results":"32","hashOfConfig":"20"},{"size":2585,"mtime":1606843470000,"results":"33","hashOfConfig":"20"},{"size":722,"mtime":1607197330000,"results":"34","hashOfConfig":"20"},{"size":944,"mtime":1607198412000,"results":"35","hashOfConfig":"20"},{"size":1377,"mtime":1607198397000,"results":"36","hashOfConfig":"20"},{"size":1191,"mtime":1607198660000,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1xypwm0",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/index.tsx",[],[],"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/App.tsx",[],"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/state/index.ts",[],"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/constants.ts",[],"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/state/reducer.ts",[],"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/state/state.tsx",[],"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/PatientListPage/index.tsx",[],"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/PatientPage/index.tsx",[],"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/utils.ts",["76","77","78","79","80","81"],"import { Gender, Patient, Entry } from \"./types\";\n\nconst isString = (text: any): text is string => {\n  return typeof text === \"string\" || text instanceof String;\n};\n\nconst parseToString = (text: any, paramName: string): string => {\n  if (!text || !isString(text)) {\n    throw new Error(`Incorrect or missing ${paramName}`);\n  }\n  return text;\n};\n\nconst isDate = (date: string): boolean => {\n  return Boolean(Date.parse(date));\n};\n\nconst parseDate = (date: any): string => {\n  if (!date || !isString(date) || !isDate(date)) {\n    throw new Error(`Incorrect or missing dateOfBirth`);\n  }\n  return date;\n};\n\nconst isGender = (gender: any): gender is Gender => {\n  return Object.values(Gender).includes(gender);\n};\n\nconst parseGender = (gender: any): Gender => {\n  if (!gender || !isGender(gender)) {\n    throw new Error(`Incorrect or missing gender`);\n  }\n  return gender;\n};\n\nexport const toPatient = (object: any): Patient => {\n  const newPatient: Patient = {\n    name: parseToString(object.name, \"name\"),\n    dateOfBirth: parseDate(object.dateOfBirth),\n    ssn: parseToString(object.ssn, \"ssn\"),\n    occupation: parseToString(object.occupation, \"occupation\"),\n    gender: parseGender(object.gender),\n    id: parseToString(object.id, \"id\"),\n    entries: object.entries,\n  };\n  return newPatient;\n};\n\n/**\n * Helper function for exhaustive type checking\n */\nexport const assertNever = (value: never): never => {\n  throw new Error(\n    `Unhandled discriminated union member: ${JSON.stringify(value)}`\n  );\n};\n","/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/components/HealthRatingBar.tsx",[],"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/types.ts",[],"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/AddPatientModal/index.tsx",[],"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/AddPatientModal/AddPatientForm.tsx",[],"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/AddPatientModal/FormField.tsx",[],"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/PatientPage/EntryDetails.tsx",[],"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/PatientPage/HealthCheckDetails.tsx",[],"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/PatientPage/OccupationalHealthcareDetails.tsx",[],"/Users/Jenny/Desktop/Working/FullStack/fullstackopen2020/part9/patientor-frontend/src/PatientPage/HospitalDetails.tsx",[],{"ruleId":"82","severity":1,"message":"83","line":3,"column":25,"nodeType":"84","messageId":"85","endLine":3,"endColumn":28,"suggestions":"86"},{"ruleId":"82","severity":1,"message":"83","line":7,"column":30,"nodeType":"84","messageId":"85","endLine":7,"endColumn":33,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"83","line":18,"column":26,"nodeType":"84","messageId":"85","endLine":18,"endColumn":29,"suggestions":"88"},{"ruleId":"82","severity":1,"message":"83","line":25,"column":27,"nodeType":"84","messageId":"85","endLine":25,"endColumn":30,"suggestions":"89"},{"ruleId":"82","severity":1,"message":"83","line":29,"column":30,"nodeType":"84","messageId":"85","endLine":29,"endColumn":33,"suggestions":"90"},{"ruleId":"82","severity":1,"message":"83","line":36,"column":35,"nodeType":"84","messageId":"85","endLine":36,"endColumn":38,"suggestions":"91"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["92","93"],["94","95"],["96","97"],["98","99"],["100","101"],["102","103"],{"messageId":"104","fix":"105","desc":"106"},{"messageId":"107","fix":"108","desc":"109"},{"messageId":"104","fix":"110","desc":"106"},{"messageId":"107","fix":"111","desc":"109"},{"messageId":"104","fix":"112","desc":"106"},{"messageId":"107","fix":"113","desc":"109"},{"messageId":"104","fix":"114","desc":"106"},{"messageId":"107","fix":"115","desc":"109"},{"messageId":"104","fix":"116","desc":"106"},{"messageId":"107","fix":"117","desc":"109"},{"messageId":"104","fix":"118","desc":"106"},{"messageId":"107","fix":"119","desc":"109"},"suggestUnknown",{"range":"120","text":"121"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"120","text":"122"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"123","text":"121"},{"range":"123","text":"122"},{"range":"124","text":"121"},{"range":"124","text":"122"},{"range":"125","text":"121"},{"range":"125","text":"122"},{"range":"126","text":"121"},{"range":"126","text":"122"},{"range":"127","text":"121"},{"range":"127","text":"122"},[75,78],"unknown","never",[195,198],[456,459],[631,634],[741,744],[908,911]]